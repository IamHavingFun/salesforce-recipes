@startuml

title "MVP scope of UI Testing in Copado"

skinparam roundCorner 10
hide footbox

actor user as "QE Engineer"

box "Local Machine"
    participant cli as "Copado CLI"
    participant vs as "VSCode"
end box

box "Salesforce"
    database story as "UserStory__c"
    database test as "Test__c"
    database result as "Result__c"
    participant runfunc as "Function__c"
    participant code as "Apex/Flow"
end box

box "Backend "
   boundary RunQweb as "Run QWeb Function"
end box

participant env as "US Environment"

== 1) Author UI Test ==
autonumber
user --> vs : author script
user --> cli : attach script to US
cli  --> test : create test 
cli --> test : store script in LTxt

== 2) Run UI Test from SF ==
autonumber
user --> test : execute()
test --> code : trigger
code --> result : create(pending)
code --> runfunc : invoke
runfunc --> RunQweb : delegate(script, authurl)
RunQweb --> env : authorize
RunQweb --> env : robot qweb
RunQweb --> result : update

== 3) Run UI Test from CLI ==
autonumber
user --> cli : run function
cli --> result : create(pending)
cli --> runfunc : invoke
runfunc --> RunQweb : delegate(script, authurl)
RunQweb --> env : authorize
RunQweb --> env : robot qweb
RunQweb --> result : update

@enduml